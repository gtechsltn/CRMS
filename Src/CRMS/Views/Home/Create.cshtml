@model CRMS.Models.CustomerModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <!-- Default box -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Thêm mới khách hàng</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="Gender">Giới tính</label>
                        <div class="col-md-10">
                            <select class="form-control list-box tri-state" id="Gender" name="Gender">
                                <option selected="selected" value="">Không rõ</option>
                                <option value="true">Nam</option>
                                <option value="false">Nữ</option>
                            </select>
                            <span class="field-validation-valid text-danger" data-valmsg-for="Gender" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CCCD, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CCCD, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CCCD, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DoB2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DoB2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DoB2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.YoB, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.YoB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.YoB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="Hobbies">Ghi chú</label>
                        <div class="col-md-10">
                            <textarea class="form-control" id="Hobbies" name="Hobbies" rows="10"></textarea>
                            <span class="field-validation-valid text-danger" data-valmsg-for="Hobbies" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" for="Note">Ghi chú</label>
                        <div class="col-md-10">
                            <textarea class="form-control" id="Note" name="Note" rows="10"></textarea>
                            <span class="field-validation-valid text-danger" data-valmsg-for="Note" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Thêm mới" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }
            </div>
            <!-- /.card-body -->
            <div class="card-footer">
                @Html.ActionLink("Danh sách", "Index")
            </div>
            <!-- /.card-footer-->
        </div>
        <!-- /.card -->
    </div>
</div>

@section Scripts {

    <link href="~/Content/summernote/summernote.css" rel="stylesheet" />
    <link href="~/Content/summernote/summernote-bs4.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote.js"></script>
    <script src="~/Scripts/summernote/summernote-bs4.js"></script>
    <script src="~/Scripts/summernote/lang/summernote-vi-VN.js"></script>

    <script>

        $(function () {
            $('#Name').focus();
        });

        $(function () {
            $('#Note').summernote();
        });

        $(function () {

            console.log('Thêm mới khách hàng');

            $('#DoB2').attr("type", "date");

            $(document).on('keypress', '#DoB2', function (evt) {
                // Only ASCII character in that range allowed
                // 47 ~ '/' character
                let ASCIICode = (evt.which) ? evt.which : evt.keyCode;
                if (ASCIICode === 47) {
                    return true;
                }
                if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) {
                    return false;
                }
                return true;
            });

            $(document).on('keypress', '#YoB', function (evt) {
                // Only ASCII character in that range allowed
                let ASCIICode = (evt.which) ? evt.which : evt.keyCode;
                if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) {
                    return false;
                }
                return true;
            });

            $(document).on('keypress', '#PhoneNumber', function (evt) {
                // Only ASCII character in that range allowed
                // 43 ~ '+' character
                let ASCIICode = (evt.which) ? evt.which : evt.keyCode;
                if (ASCIICode === 43) {
                    return true;
                }
                if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) {
                    return false;
                }
                return true;
            });
        });
    </script>
}